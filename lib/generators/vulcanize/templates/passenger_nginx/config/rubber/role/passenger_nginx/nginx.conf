<%
  @path = "/etc/nginx/nginx.conf"
  @post = "mkdir -p /mnt/nginx/logs"
%>

user <%= rubber_env.app_user %>;
worker_processes 4;
worker_rlimit_nofile 10240;

pid /var/run/nginx.pid;

events
{
  worker_connections 8192;
}

http
{
  include           /etc/nginx/mime.types;
  default_type      application/octet-stream;

  sendfile          on;
  tcp_nopush        on;
  tcp_nodelay       off;

  gzip              on;
  gzip_http_version 1.0;
  gzip_comp_level   2;
  gzip_proxied      any;
  gzip_types        text/plain text/css application/x-javascript text/xml application/xml application/xml+rss text/javascript;

  # configure log format like to Apache's "combined" log format
  log_format        main
                      '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_cookie"';

  # default log files
  error_log         /mnt/nginx/logs/error.log notice;
  access_log        /mnt/nginx/logs/access.log main;

	passenger_root <%= rubber_env.passenger_root %>;
	passenger_ruby <%= rubber_env.passenger_ruby %>;
	
	passenger_max_pool_size <%= rubber_env.max_app_connections %>;
	passenger_min_instances <%= rubber_env.max_app_connections %>;
	passenger_max_instances_per_app 0;
	passenger_pool_idle_time 0;
	rails_framework_spawner_idle_time 0;
	rails_app_spawner_idle_time 0;
	passenger_friendly_error_pages <%= RUBBER_ENV == 'production' ? 'off' : 'on' %>;
	
	passenger_user <%= rubber_env.app_user %>;
	
  include /etc/nginx/rubber/*.conf;
}
