<%
  log_spool_dir = "/var/spool/rsyslog"
  logstash_server = rubber_instances.for_role('logstash_server').first

  @path = "/etc/rsyslog.conf"
  @post = <<-ENDSCRIPT
    mkdir -p #{log_spool_dir}
    chown syslog:adm #{log_spool_dir}
    /usr/sbin/service rsyslog restart
  ENDSCRIPT
%>
#  /etc/rsyslog.conf	Configuration file for rsyslog.
#
#			For more information see
#			/usr/share/doc/rsyslog-doc/html/rsyslog_conf.html
#
#  Default logging rules can be found in /etc/rsyslog.d/50-default.conf


#################
#### MODULES ####
#################

$ModLoad imuxsock # provides support for local system logging
$ModLoad imklog   # provides kernel logging support (previously done by rklogd)
#$ModLoad immark  # provides --MARK-- message capability

# Load the imfile input module for reading our logs from disk
module(load="imfile" PollingInterval="1")

# provides UDP syslog reception
#$ModLoad imudp
#$UDPServerRun 514

# provides TCP syslog reception
#$ModLoad imtcp
#$InputTCPServerRun 514

###########################
#### GLOBAL DIRECTIVES ####
###########################

#
# Use traditional timestamp format.
# To enable high precision timestamps, comment out the following line.
#
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat

# Don't filter duplicated messages
$RepeatedMsgReduction off

#
# Set the default permissions for all log files.
#
$FileOwner syslog
$FileGroup adm
$FileCreateMode 0640
$DirCreateMode 0755
$Umask 0022
$PrivDropToUser syslog
$PrivDropToGroup syslog
# https://bugs.launchpad.net/ubuntu/+source/rsyslog/+bug/484336

#
# Where to place spool files
#
$WorkDirectory <%= log_spool_dir %>


# Template for formatting log entry in json for logstash
$template logstash_json,"{%timestamp:::date-rfc3339,jsonf:@timestamp%,%source:::jsonf:@host%,%syslogseverity-text:::jsonf:@severity%,\"@message\":\"%msg:::json%\",\"@fields\":{%syslogfacility-text:::jsonf:facility%,%syslogtag:::jsonf:syslogtag%,%app-name:::jsonf:program%,%procid:::jsonf:pid%}}"

# Template for passing message through untouched as it is already in json format for logstash
$template logstash_raw, "%msg%"

# ruleset for sending raw message (preformatted as json) to logstash, then stop processing
ruleset(name="raw_send_to_logstash_only"){

  # buffer up logs if remote log collector not available
  $ActionQueueType LinkedList
  $ActionQueueFileName raw_send_to_logstash_only_buffer
  $ActionQueueMaxDiskSpace 1g
  $ActionResumeRetryCount -1
  $ActionQueueSaveOnShutdown on

  action(type="omfwd"
         template="logstash_raw"
         Target="<%= logstash_server.full_name %>"
         Port="<%= rubber_env.logstash_server_syslog_port %>"
         Protocol="tcp"
        )
	stop
}

# ruleset for formatting syslog entry as json then sending to logstash, then stop processing
ruleset(name="json_send_to_logstash_only"){

  # buffer up logs if remote log collector not available
  $ActionQueueType LinkedList
  $ActionQueueFileName json_send_to_logstash_only_buffer
  $ActionQueueMaxDiskSpace 1g
  $ActionResumeRetryCount -1
  $ActionQueueSaveOnShutdown on

  action(type="omfwd"
         template="logstash_json"
         Target="<%= logstash_server.full_name %>"
         Port="<%= rubber_env.logstash_server_syslog_port %>"
         Protocol="tcp"
        )
	stop
}

# ruleset for formatting syslog entry as json then sending to logstash, processing continues
ruleset(name="json_send_to_logstash"){

  # buffer up logs if remote log collector not available
  $ActionQueueType LinkedList
  $ActionQueueFileName json_send_to_logstash_buffer
  $ActionQueueMaxDiskSpace 1g
  $ActionResumeRetryCount -1
  $ActionQueueSaveOnShutdown on

  action(type="omfwd"
         template="logstash_json"
         Target="<%= logstash_server.full_name %>"
         Port="<%= rubber_env.logstash_server_syslog_port %>"
         Protocol="tcp"
        )
}

#
# Include all config files in /etc/rsyslog.d/
#
$IncludeConfig /etc/rsyslog.d/*.conf

