<%
  @path = "/etc/nginx/rubber/application.conf"
%>

server_name  <%= [ rubber_env.domain, rubber_env.web_aliases ].flatten.compact.join(" ") %>;
passenger_enabled on;
passenger_min_instances 1;
passenger_set_cgi_param HTTP_X_QUEUE_START "t=${msec}000";

root <%= Rubber.root + "/public" %>;

# this rewrites all the requests to the maintenance.html
# page if it exists in the doc root. This is for capistrano's
# disable web task
if (-f $document_root/system/maintenance.html)
{
  rewrite  ^(.*)$  /system/maintenance.html last;
  break;
}

error_page   500 502 503 504  /500.html;
location = /500.html
{
  root <%= Rubber.root + "/public" %>;
}
error_page 404  /404.html;
location = /404.html
{
  root <%= Rubber.root + "/public" %>;
}

<% if Rubber::Util.has_asset_pipeline? %>
# Give static assets a far-future header and serve the pre-compressed version of the asset
# instead of compressing on the fly.
location ~ ^/(assets)/ {
  gzip_static on;
  expires     max;
  add_header  Cache-Control public;
  add_header  Last-Modified "";
  add_header  ETag "";
  break;
}
<% end %>
